/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* deleteDuplicates(struct ListNode* head){
    
    struct ListNode* fake = (struct ListNode*)malloc(sizeof(struct ListNode));
   
    fake->next = head;
    struct ListNode* pre = fake;        
    struct ListNode* curr = head;       
    //traverse nodes and do the process
    while (curr != NULL) {
        // Create a loop until the current and previous values are same, keep updating curr
        while (curr->next != NULL && pre->next->val == curr->next->val)
            curr = curr->next;
        // if curr has non-duplicate value, move the pre pointer to next node
        if (pre->next == curr)
            pre = pre->next;
        // If curr is updated to the last duplicate value, discard it & connect pre and curr->next
        else
            pre->next = curr->next;
            // Move curr forward
            // In next iteration, we still need to check whether curr points to duplicate value
            curr = curr->next;
    }
    
    return fake->next;
}
