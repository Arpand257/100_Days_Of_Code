/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* fairCandySwap(int* aliceSizes, int aliceSizesSize, int* bobSizes, int bobSizesSize, int* returnSize) {
int sumA = 0, sumB = 0;
for(int i = 0; i < aliceSizesSize; i++){
    sumA += aliceSizes[i];
}
for(int i = 0; i < bobSizesSize; i++){
    sumB += bobSizes[i];
}
int c = (sumA - sumB) / 2;
int maxsize = 100001;
int bobset[maxsize];
for(int i = 0; i < maxsize; i++){
    bobset[i] = 0;
}
for(int i = 0; i < bobSizesSize; i++){
    bobset[bobSizes[i]] = 1;
}

int* res = (int*)malloc(sizeof(int)*2);
for(int i = 0; i < aliceSizesSize; i++){
    int x = aliceSizes[i];
    int y = x - c;
    if(y >= 0 && y < maxsize && bobset[y]){
        res[0] = x;
        res[1] = y;
        *returnSize = 2;
        return res;
    }

}
*returnSize = 0;
return NULL;
    
}
