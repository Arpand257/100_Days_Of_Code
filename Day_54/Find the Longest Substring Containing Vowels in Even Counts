int findTheLongestSubstring(char* s) {
    char vowels[] = {'a', 'e', 'i', 'o', 'u'};
    int seen[32]; 
    memset(seen, -1, sizeof(seen));
    
    int bitmask = 0; 
    seen[0] = 0;
    
    int max_len = 0; 
    int n = strlen(s);
    
    for (int i = 0; i < n; ++i) {
        if (s[i] == 'a') bitmask ^= 1 << 0; 
        else if (s[i] == 'e') bitmask ^= 1 << 1;
        else if (s[i] == 'i') bitmask ^= 1 << 2;
        else if (s[i] == 'o') bitmask ^= 1 << 3;
        else if (s[i] == 'u') bitmask ^= 1 << 4;
        
        if (seen[bitmask] != -1) {
            max_len = fmax(max_len, i + 1 - seen[bitmask]);
        } else {
            seen[bitmask] = i + 1;
        }
    }
    
    return max_len;
}
